{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red16\green60\blue192;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c6667\c33333\c80000;}
\margl1440\margr1440\vieww21280\viewh11420\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #README for Django website Documentation and possible recreation#
\f1\fs24 \
\
\

\f0\fs29\fsmilli14667 Create a directory for the project for example mine is called 396_project. Then create a virtual environment. I am using one called Virtual environment, this can be downloaded via pip3. Once downloaded activate using(for MacOS) source (env_source)/bin/activate. This will activate your Venv. Then install Django using pip. After installation we can begin to install requirements and setup apps for the website.
\f1\fs24 \
\

\f0\fs29\fsmilli14667 First we need an html file to host have our page look. Creating home.html will do for us now. To make things easier along the way we create \'93snippets\'94 of html that can be referenced and loaded into this home html file so that we can make things look cleaner and have some encapsulation. These snippets will include post, and headers and footers.
\f1\fs24 \
\

\f0\fs29\fsmilli14667 The first app we will create is te account app. By typing in the terminal djanog-admin startapp account, we can create an app named account. In this account app we will make the the user accounts that will populate the database and host users.\'a0
\f1\fs24 \
\

\f0\fs29\fsmilli14667 For each app including the account app, we will have some necessary files. These include the urls.py, models.py, views.py and sometimes forms.py. These files work to show url paths, create the models within the database and render the webpages.
\f1\fs24 \
\

\f0\fs29\fsmilli14667 For Account we create a class inside models called Account that will have all the account details such as email, name, date_joined and such. This naming method and class creation is used throughout the apps in my project.
\f1\fs24 \
\

\f0\fs29\fsmilli14667 Once these models are created, we can call them from views to then go through the urls and pass their context into a form to show on an html page that the end user can interact with. This is all done through Django\'92s apps and techniques.
\f1\fs24 \
\

\f0\fs29\fsmilli14667 Other apps that have been created for this project include, Blog(the posts), and Quiz. There is one other app implemented called hit_count that is user created linked here: {\field{\*\fldinst{HYPERLINK "https://django-hitcount.readthedocs.io/en/latest/overview.html"}}{\fldrslt \cf3 \ul \ulc3 \strokec3 https://django-hitcount.readthedocs.io/en/latest/overview.html}} , this was used to track hit count for the websites.
\f1\fs24 \
\

\f0\fs29\fsmilli14667 One more important thing to implement is Bootstrap. Bootstrap is frontend toolkit that allows for further customization of html. This was used to make the website more responsive and look much better. Linked is the bootstrap docs: {\field{\*\fldinst{HYPERLINK "https://getbootstrap.com/docs/5.3/getting-started/introduction/"}}{\fldrslt \cf3 \ul \ulc3 \strokec3 https://getbootstrap.com/docs/5.3/getting-started/introduction/}}\cf3 \ul \ulc3 \strokec3  .
\f1\fs24 \cf0 \ulnone \strokec2 \
\
}